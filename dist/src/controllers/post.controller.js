"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.deleteAllCommentInPostController = exports.deleteUserCommentInPostController = exports.deleteCommentInPostController = exports.getAllCommentInPostController = exports.getUserCommentInPostController = exports.getCommentInPostController = exports.updateCommentInPostController = exports.addCommentInPostController = exports.likePostController = exports.updatePostController = exports.deleteUserPostsController = exports.getUserPostsController = exports.deletePostController = exports.getTimelinePostsController = exports.getPostController = exports.getPostsController = exports.createPostController = void 0;
const services_1 = require("@src/services");
const createPostController = (req, res, next) => (0, services_1.createPostService)(req, res, next);
exports.createPostController = createPostController;
const getPostsController = (req, res) => (0, services_1.getPostsService)(req, res);
exports.getPostsController = getPostsController;
const getPostController = (req, res, next) => (0, services_1.getPostService)(req, res, next);
exports.getPostController = getPostController;
const getTimelinePostsController = (req, res, next) => (0, services_1.getTimelinePostsService)(req, res, next);
exports.getTimelinePostsController = getTimelinePostsController;
const deletePostController = (req, res, next) => (0, services_1.deletePostService)(req, res, next);
exports.deletePostController = deletePostController;
const getUserPostsController = (req, res, next) => (0, services_1.getUserPostsService)(req, res, next);
exports.getUserPostsController = getUserPostsController;
const deleteUserPostsController = (req, res, next) => (0, services_1.deleteUserPostsService)(req, res, next);
exports.deleteUserPostsController = deleteUserPostsController;
const updatePostController = (req, res, next) => (0, services_1.updatePostService)(req, res, next);
exports.updatePostController = updatePostController;
const likePostController = (req, res, next) => (0, services_1.likePostService)(req, res, next);
exports.likePostController = likePostController;
const addCommentInPostController = (req, res, next) => (0, services_1.addCommentInPostService)(req, res, next);
exports.addCommentInPostController = addCommentInPostController;
const updateCommentInPostController = (req, res, next) => (0, services_1.updateCommentInPostService)(req, res, next);
exports.updateCommentInPostController = updateCommentInPostController;
const getCommentInPostController = (req, res, next) => (0, services_1.getCommentInPostService)(req, res, next);
exports.getCommentInPostController = getCommentInPostController;
const getUserCommentInPostController = (req, res, next) => (0, services_1.getUserCommentInPostService)(req, res, next);
exports.getUserCommentInPostController = getUserCommentInPostController;
const getAllCommentInPostController = (req, res, next) => (0, services_1.getAllCommentInPostService)(req, res, next);
exports.getAllCommentInPostController = getAllCommentInPostController;
const deleteCommentInPostController = (req, res, next) => (0, services_1.deleteCommentInPostService)(req, res, next);
exports.deleteCommentInPostController = deleteCommentInPostController;
const deleteUserCommentInPostController = (req, res, next) => (0, services_1.deleteUserCommentInPostService)(req, res, next);
exports.deleteUserCommentInPostController = deleteUserCommentInPostController;
const deleteAllCommentInPostController = (req, res, next) => (0, services_1.deleteAllCommentInPostService)(req, res, next);
exports.deleteAllCommentInPostController = deleteAllCommentInPostController;
//# sourceMappingURL=post.controller.js.map